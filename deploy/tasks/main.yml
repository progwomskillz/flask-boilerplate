- hosts: 'web'
  vars:
  - aws_key: '{{aws_key}}'
  - aws_secret: '{{aws_secret}}'
  - aws_region: 'us-east-1'
  - user: 'ubuntu'
  - version: '{{version}}'
  - docker_image: '{{docker_image}}'
  - domain: '{{version}}.example.com'
  environment:
  - AWS_ACCESS_KEY_ID: '{{aws_key}}'
  - AWS_SECRET_ACCESS_KEY: '{{aws_secret}}'
  become: yes
  tasks:
  # File system
  - name: 'Inject the secrets'
    copy:
      src: './../.env'
      dest: '/home/{{user}}/app/'
  # Docker
  - name: 'Restart Docker'
    service:
      name: 'docker'
      state: 'restarted'
  # ECR
  - name: 'ECR docker login'
    shell: '$(aws ecr get-login --no-include-email --region {{aws_region}})'
  # Nginx
  - name: 'Copy base nginx config'
    template:
      src: './../templates/nginx.conf.j2'
      dest: '/etc/nginx/nginx.conf'
  - name: 'Copy app nginx config'
    template:
      src: './../templates/app.nginx.conf.j2'
      dest: '/etc/nginx/conf.d/app.nginx.conf'
  - name: 'Reload nginx'
    service:
      name: 'nginx'
      state: 'restarted'
  # App
  - name: 'Pulling {{version}} image'
    docker_image:
      pull: yes
      force: yes
      name: '{{docker_image}}'
  - name: 'Launch container with new image'
    docker_container:
      recreate: yes
      name: '{{version}}'
      image: '{{docker_image}}'
      restart_policy: 'on-failure'
      state: 'started'
      published_ports:
      - '8000:8000'
      env_file: /home/{{user}}/app/.env
  # File system
  - name: 'Delete the .env file'
    file: 
      path: '/home/{{user}}/app/.env'
      state: 'absent'
